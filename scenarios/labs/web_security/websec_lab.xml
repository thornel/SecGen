<?xml version="1.0"?>

<scenario xmlns="http://www.github/cliffe/SecGen/scenario"
		xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		xsi:schemaLocation="http://www.github/cliffe/SecGen/scenario">

	<name>Web security lab environment</name>
  <author>Z. Cliffe Schreuders</author>
  <description>An environment for web security labs. Kali Linux with Damn Vulnerable Web App server, WebGoat, and web sec tools. </description>

  <type>lab-environment</type>
	<type>ctf-lab</type>

	<!-- comprehensive web set training frameworks: WebGoat and DVWA -->
	<CyBOK KA="WAM" topic="Fundamental Concepts and Approaches">
		<keyword>web PKI and HTTPS</keyword>
		<keyword>authentication</keyword>
		<keyword>cookies</keyword>
		<keyword>passwords and alternatives</keyword>
		<keyword>JAVASCRIPT / HYPERTEXT MARKUP LANGUAGE (HTML) / CASCADING STYLE SHEETS (CSS) / HYPERTEXT TRANSFER PROTOCOL (HTTP)
		COOKIES</keyword>
		<keyword>HYPERTEXT TRANSFER PROTOCOL (HTTP) - PROXYING</keyword>
		<keyword>Broken Access Control / Insecure Direct Object References</keyword>
		<keyword>SESSION HIJACKING</keyword>
		<keyword>REPRESENTATIONAL STATE TRANSFER (REST)</keyword>
	</CyBOK>
	<CyBOK KA="WAM" topic="Client-Side Vulnerabilities and Mitigations">
		<keyword>client-side storage</keyword>
		<keyword>CLIENT-SIDE VALIDATION</keyword>
		<keyword>clickjacking</keyword>
	</CyBOK>
	<CyBOK KA="WAM" topic="Client-Side Vulnerabilities and Mitigations">
		<keyword>client-side storage</keyword>
		<keyword>CLIENT-SIDE VALIDATION</keyword>
		<keyword>clickjacking</keyword>
	</CyBOK>
  <CyBOK KA="WAM" topic="Server-Side Vulnerabilities and Mitigations">
		<keyword>injection vulnerabilities</keyword>
		<keyword>server-side misconfiguration and vulnerable components</keyword>
		<keyword>CROSS-SITE SCRIPTING (XSS)</keyword>
		<keyword>SAME ORIGIN POLICY (SOP)</keyword>
		<keyword>COMMAND INJECTION</keyword>
		<keyword>SQL-INJECTION</keyword>
		<keyword>CROSS-SITE REQUEST FORGERY (CSRF)</keyword>
		<keyword>CONFUSED DEPUTY ATTACKS</keyword>
	</CyBOK>
  <CyBOK KA="SS" topic="Categories of Vulnerabilities">
		<keyword>Web vulnerabilities / OWASP Top 10</keyword>
		<keyword>API vulnerabilities</keyword>
	</CyBOK>
  <CyBOK KA="SS" topic="Prevention of Vulnerabilities">
		<keyword>coding practices</keyword>
		<keyword>Protecting against session management attacks, XSS, SQLi, CSRF</keyword>
		<keyword>API design</keyword>
	</CyBOK>

	<system>
		<system_name>kali</system_name>
		<base distro="Kali" name="MSF"/>

		<input into_datastore="IP_addresses">
			<value>172.16.0.2</value>
			<value>172.16.0.3</value>
			<value>172.16.0.4</value>
		</input>

		<input into_datastore="kali_root_account">
			<value>{"username":"root","password":"toor","super_user":"","strings_to_leak":[],"leaked_filenames":[]}</value>
		</input>

		<utility module_path=".*/kali_web"/>
		<utility module_path=".*/metasploit_framework"/>
		<utility module_path=".*/handy_cli_tools"/>
		<utility module_path=".*/nmap"/>

		<utility module_path=".*/iceweasel">
			<input into="accounts">
				<datastore>kali_root_account</datastore>
			</input>
			<input into="autostart">
				<value>true</value>
			</input>
			<input into="start_page">
				<value>http://localhost:8085/WebGoat|http://localhost:9090/WebWolf|http://localhost/login.php|https://10.255.255.10</value>
			</input>
		</utility>

		<vulnerability module_path=".*/dvwa" />
		<vulnerability module_path=".*/webgoat">
			<input into="port">
				<value>8085</value>
			</input>
		</vulnerability>
    <vulnerability module_path=".*/webwolf" />

		<utility module_path=".*/default_client_firewall" />

		<network type="private_network" >
			<input into="IP_address">
				<datastore access="1">IP_addresses</datastore>
			</input>
		</network>
	</system>

</scenario>
