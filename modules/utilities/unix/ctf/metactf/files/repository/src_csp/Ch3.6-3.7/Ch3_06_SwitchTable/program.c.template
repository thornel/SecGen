#include <stdio.h>
#include <fcntl.h>
#include <string.h>
#include <stdlib.h>
#include <unistd.h>
#define USERDEF AAAAAA

char msg[] =
 "Switch statements are often implemented using a switch table that consists\n"
 "of pointers to code that are indexed by the value of the integer being\n"
 "tested.  In this assignment, you you will need to decode the switch table to\n"
 "find out the value that will unlock the level.  The assembly output of the\n"
 "program is in 3.06_switch.s for your viewing convenience\n\n";

/* Symbolic execution trap */
void print_msg() {
  unsigned int i,h1,h2;
  unsigned int len=strlen(msg);
  for (i = 0; i < 100*len; i++) {
    h1 += msg[i%len] + msg[(i+1)%len];
    h2 += msg[(i+1)%len] + msg[(i+2)%len];
  }
  if (h1 == h2)
    printf("%s",msg);
  else
    printf("%s",msg);
}

void printflag()
{
	int fd;
	int len;
	unsigned char data[128];

	fd = open("flag", O_RDONLY);

	if ( fd <= 0 ) {
		printf("Failed to open flag.\n");
		return;
	}

	len = lseek( fd, 0, SEEK_END);
	lseek(fd, 0, SEEK_SET);

	if ( len > 128 ) {
		len = 128;
	}

	memset(data, 0, 128);
	read( fd, data, len);
	close(fd);

	printf("%s\n", data);
	return;
}

int main() {
    int i;

    print_msg();
    printf("Enter the password: ");
    scanf("%d",&i);
    switch (i) {
	case USERDEF+1:
	case USERDEF+5:
		printf("Try again.\n"); break;
	case USERDEF+4:
	case USERDEF+2:
		printf("Try again.\n"); break;
	case USERDEF+3:
    	printf("Good Job.\n");
		printflag(); break;
	default: printf("Try again.\n");
    }
    return 0;
}
