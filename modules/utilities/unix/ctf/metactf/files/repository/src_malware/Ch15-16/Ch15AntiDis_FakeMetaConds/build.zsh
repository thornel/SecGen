#!/bin/zsh
# Take subset of SHA, convert to decimal in bc
SALT=`date +%g`
nop="__asm__(\"nop\");\n"
nop_pad=()
if [[ ARGC -gt 0 ]] then
  BINNAME=`basename $PWD`
  foreach USER ($@)
    mkdir -p obj/$USER
    TMP=`echo $USER $SALT $BINNAME | sha256sum | awk '{print $1}' | cut -c 1-4 | tr \[a-f\] \[A-F\]`
    U0=`echo "ibase=16;scale=0;$TMP%8" | bc`
    U1=`echo "ibase=16;scale=0;($TMP+1)%8" | bc`
    U2=`echo "ibase=16;scale=0;($TMP+2)%8" | bc`
    U3=`echo "ibase=16;scale=0;($TMP+3)%8" | bc`
    AA=`echo ASM${U0}`
    BB=`echo ASM${U1}`
    CC=`echo ASM${U2}`
    DD=`echo ASM${U3}`
    U4=`echo $USER $SALT $BINNAME | sha512sum | awk '{print $1}' | cut -c 1-6 | tr \[a-f\] \[A-F\]`
    EE=`echo "ibase=16;$U4" | bc`
    # Generate 1-11 random lines of nop instructions
    foreach m (1 2 3)
      let "r = $RANDOM % 10"
      for j in {0..$r}
      do
        nop_pad[$m]+=$nop
      done
    end
    sed "s/AAAAAA/$AA/g;s/BBBBBB/$BB/g;s/CCCCCC/$CC/g;s/DDDDDD/$DD/g;s/EEEEEE/$EE/g;s/NOP_PAD1/${nop_pad[1]}/g;s/NOP_PAD2/${nop_pad[2]}/g;s/NOP_PAD3/${nop_pad[3]}/g" program.c.template >! program.c
    gcc -m32 -o obj/$USER/$BINNAME program.c
  end
else
  echo "USAGE: build.zsh <user_email(s)>"
fi
