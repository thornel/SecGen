
	<attack>
    <!--shell on the backup server-->
		<get_shell>sshpass -p <%= $root_password %> ssh -oStrictHostKeyChecking=no root@<%= $backup_server_ip %> /bin/bash</get_shell>

		<!-- topic: Rsync-->
		<prompt>It's your job to set up remote backups for <%= $second_user %> (a user on your system). Use rsync to create a full (epoch) remote backup of /home/<%= $second_user %> from your desktop system to the backup_server: <%= $backup_server_ip %>:/home/<%= $main_user %>/remote-rsync-full-backup/<%= $second_user %>.</prompt>

		<post_command>ls /home/<%= $main_user %>/remote-rsync-full-backup/<%= $second_user %>/<%= $files.sample %> > /dev/null; echo $?</post_command>
		<condition>
			<output_matches>0</output_matches>
			<message>:) Well done! <%= $flags.pop %></message>
			<trigger_next_attack>true</trigger_next_attack>
		</condition>
		<condition>
			<output_matches>No such file or directory</output_matches>
			<message>:( You didn't copy to remote ssh /home/<%= $main_user %>/remote-rsync-full-backup/<%= $second_user %>/ Remember that the trailing / changes whether you are copying directories or their contents...</message>
		</condition>
		<else_condition>
			<message>:( Doesn't look like you have backed up all of <%= $second_user %>'s files to /home/<%= $main_user %>/remote-rsync-backup/<%= $second_user %>. Try SSHing to the server and look at what you have backed up there.</message>
		</else_condition>

	</attack>
	<attack>
<% $first_notes = SecureRandom.hex(2) %>
<% $hidden_flag = 'not_a_flag' %>
    <!--shell on the desktop-->
		<!-- topic: Rsync-->
		<prompt>The <%= $second_user %> user is about to create some files...</prompt>

		<post_command>sudo -u <%= $second_user %> bash -c 'echo "Note to self: drink more water <%= $first_notes %>" > /home/<%= $second_user %>/notes; echo "Beep boop beep" > /home/<%= $second_user %>/logs/log2; echo <%= $hidden_flag %> > /home/<%= $second_user %>/personal_secrets/flag; echo $?'</post_command>
		<condition>
			<output_matches>Permission denied|Operation not permitted|Read-only</output_matches>
			<message>:( Oh no. Access errors. <%= $second_user %> failed to write the files... The user needs to be able to write to their files!</message>
		</condition>
		<condition>
			<output_matches>0</output_matches>
			<message>Ok, good... </message>
			<trigger_next_attack>true</trigger_next_attack>
		</condition>
		<else_condition>
			<message>:( Something went wrong...</message>
		</else_condition>
	</attack>

	<attack>
    <!--shell on the backup server-->
		<get_shell>sshpass -p <%= $root_password %> ssh -oStrictHostKeyChecking=no root@<%= $backup_server_ip %> /bin/bash</get_shell>

		<!-- topic: Rsync differential-->
		<prompt>Create a differential backup of <%= $second_user %>'s desktop files to the backup_server: <%= $backup_server_ip %>:/home/<%= $main_user %>/remote-rsync-differential1/.</prompt>

		<!--grep retval=0 when match is found, 1/2 otherwise-->

		<post_command>grep '<%= $hidden_flag %>' /home/<%= $main_user %>/remote-rsync-differential1/<%= $second_user %>/personal_secrets/flag > /dev/null; status1=$?; ls /home/<%= $main_user %>/remote-rsync-differential1/<%= $second_user %>/<%= $files.sample %> > /dev/null; status2=$?; echo $status1$status2</post_command>
		<condition>
			<output_matches>0[1-9]</output_matches>
			<message>:) Well done! <%= $flags.pop %> </message>
			<trigger_next_attack>true</trigger_next_attack>
		</condition>
		<condition>
			<output_matches>[1-9][1-9]</output_matches>
			<message>:( You didn't backup to the specified remote directory.</message>
		</condition>
		<condition>
			<output_matches>00</output_matches>
			<message>:( You backed up to the correct location, but it wasn't an differential backup... You probably need to ssh in and delete that last backup and try again.</message>
		</condition>
		<else_condition>
			<message>:( Something went wrong...</message>
		</else_condition>
	</attack>

                                  
	<attack>
    <!--shell on the desktop-->
		<!-- topic: Rsync-->
		<prompt>I am going to attack you now!</prompt>

		<post_command>rm -r /home/<%= $second_user %>/*; echo $?</post_command>
		<condition>
			<output_matches>Permission denied|Operation not permitted|Read-only</output_matches>
			<message>:( Oh no. Access errors. <%= $second_user %>. You need to let this happen!</message>
		</condition>
		<condition>
			<output_matches>0</output_matches>
			<message>I just deleted all <%= $second_user %>'s files! They don't call me Hackerbot for nothin'!</message>
			<trigger_next_attack>true</trigger_next_attack>
		</condition>
		<else_condition>
			<message>:( Something went wrong...</message>
		</else_condition>
	</attack>


	<attack>
    <!--shell on the desktop server-->

		<!-- topic: Rsync incremental-->
		<prompt>Restore <%= $second_user %>'s notes file to it's earliest state</prompt>

		<post_command>grep '<%= $first_notes %>' /home/<%= $second_user %>/notes > /dev/null; status1=$?; echo $status1</post_command>
		<condition>
			<output_matches>0</output_matches>
			<message>:) Well done! <%= $flags.pop %> </message>
			<trigger_next_attack>true</trigger_next_attack>
		</condition>
		<condition>
			<output_matches>[0-9]</output_matches>
			<message>:( That's not the earliest state...</message>
		</condition>
		<else_condition>
			<message>:( Something went wrong...</message>
		</else_condition>
	</attack>