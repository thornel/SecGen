# Analysis of a Compromised System - Part 1: Online Analysis and Data Collection

## Getting started
### VMs in this lab

==Start these VMs== (if you haven't already):

- hackerbot-server (leave it running, you don't log into this)
- desktop
- server-compromised (user: root password: toor)[^2]

All of these VMs need to be running to complete the lab.

==Create a new VM from the Redhat7.2\_Template2 template and give it a name that begins with your "c" number==. **DO NOT START the new VM.**
> If you are working on campus in the IMS labs using the oVirt online labs, [*click here for instructions on how to login on campus in the IMS labs and create VMs from templates*](https://docs.google.com/document/d/1SZQmZ8tEmwqzlya5zMCuwTh_C1EqHfMRif09CyilYAE/edit?usp=sharing).

> If you are working remotely using the oVirt online labs, [*click here for instructions on how to login via VPN and create VMs from templates*](https://docs.google.com/document/d/1zhANC_pz7fNwc_cALxGwPEn3_vls2YjWJUAkUV0BwlI/edit?usp=sharing).


The Compromised Red Hat 7.2 system is based on a server that has been compromised (courtesy of the Honeynet Project[^1]).

Once you have your compromised server VM, ==add the FIRE IR CD disk==.

In oVirt, right click on the VM and choose **Change CD**.

==Select the "fire-0.3.5b.iso"== file from the dropdown box.


==Start the VM and log in as the user specified above.==

### Your login details for the VMs

**Desktop:**

User: <%= $main_user %>
Password: tiaspbiqe2r (**t**his **i**s **a** **s**ecure **p**assword **b**ut **i**s **q**uite **e**asy **2** **r**emember)

**Compromised-Server:**

User: root
Password: toor

You won't login to the hackerbot_server, but all the VMs need to be running to complete the lab.

### For marks in the module
1. **You need to submit flags**. Note that the flags and the challenges in your VMs are different to other's in the class. Flags will be revealed to you as you complete challenges throughout the module. Flags look like this: ==flag{*somethingrandom*}==. Follow the link on the module page to submit your flags.
2. **You need to document the work and your solutions in a workbook**. This needs to include screenshots (including the flags) of how you solved each Hackerbot challenge and a writeup describing your solution to each challenge, and answering any "Workbook Questions". The workbook will be submitted later in the semester.

## Hackerbot!
![small-right](images/skullandusb.svg)

This exercise involves interacting with Hackerbot, a chatbot who will task you to investigate the system. If you satisfy Hackerbot by completing the challenges, she will reveal flags to you.

Work through the below exercises, completing the Hackerbot challenges as noted.

## Note IP addresses 

**On the Red Hat 7.2 VM:**
==Login to the Red Hat 7.2 VM with root and toor.==

Run "dhcpcd eth0" on the VM to renew its IP address:
```bash
dhcpcd eth0
```

Note the IP addresses of the redhat and your Desktop VMs. Make a note of the two IP addresses, which should be on the same subnet (starting the same): for example, if both systems include IP addresses starting with 192.168.201 they are on the same network. You will need these IP addresses later.
> Check IP addresses using `ifconfig` or `ip a s`

## Reminder to save

Remember to **save any evidence you collect**, as this will be used as the basis for the next lab. **You cannot complete the following lab (part 2) without saving the evidence you collect during this lab.** Saving to your Desktop VM should be sufficient.

---

## Introduction

So you have reason to believe one of your servers has experienced a security compromise... What next? For this lab you investigate a real Linux server that was connected to the Internet, and attacked and compromised by unknown remote attackers.

The investigation of a potential security compromise is closely related to digital forensics topics. As with forensic investigations, we also aim to maintain the integrity of our "evidence", *wherever possible* not modifying access times or other information. However, in a business incident response setting maintaining a chain of evidence may not be our highest priority, since we may be more concerned with other business objectives, such as assuring the confidentiality, integrity, and availability of data and services.

During analysis, it is good practice to follow the order of volatility (OOV): collecting the most volatile evidence first (such as the contents of RAM, details of processes running, and so on) from a live system, then collecting less volatile evidence (such as data stored on disk) using offline analysis.
